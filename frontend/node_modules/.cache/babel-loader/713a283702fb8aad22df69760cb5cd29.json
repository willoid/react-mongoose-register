{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dci/UIBasics/dbs/mongoose/frontend/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Success from \"./alerts/registerSuccess\";\nimport Failed from \"./alerts/registerFailed\";\nexport default function Register() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [warning, setWarning] = useState(false);\n\n  const getValue = e => {\n    setUser(() => {\n      return { ...user,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"/users/add\",\n      data: user\n    }).then(response => {\n      console.log(message);\n      setMessage(response.data.register);\n      setIsRegistered(true);\n      console.log(response.data.register);\n      /* response.data.register === true ? <Success/> : <Failed/> */\n    }).catch(error => {\n      setWarning(true);\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [isRegistered ? /*#__PURE__*/_jsxDEV(Success, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          submitHandler(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"registerEmail\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            required: true,\n            className: \"form-control\",\n            id: \"registerEmail\",\n            placeholder: \"Enter email\",\n            name: \"email\",\n            onChange: getValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"registerPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true,\n            className: \"form-control\",\n            id: \"registerPassword\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: getValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"registerName\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            id: \"registerName\",\n            placeholder: \"Name\",\n            name: \"name\",\n            onChange: getValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"registerSpiritAnimal\",\n            children: \"Spirit Animal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            id: \"registerSpiritAnimal\",\n            placeholder: \"Spirit Animal\",\n            name: \"spiritAnimal\",\n            onChange: getValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"already registered? please \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./login\",\n          children: \"log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), message ? null : /*#__PURE__*/_jsxDEV(Failed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this), warning ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"server is ooo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"hDeBfvFKbYUyu0b7eZHrCKj1gew=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/dci/UIBasics/dbs/mongoose/frontend/src/components/register.js"],"names":["React","useState","axios","Form","BrowserRouter","Router","Switch","Route","Link","Success","Failed","Register","user","setUser","isRegistered","setIsRegistered","message","setMessage","warning","setWarning","getValue","e","target","name","value","submitHandler","preventDefault","method","url","data","then","response","console","log","register","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Success from \"./alerts/registerSuccess\";\nimport Failed from \"./alerts/registerFailed\";\n\nexport default function Register() {\n  const [user, setUser] = useState({});\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [warning, setWarning] = useState(false);\n\n  const getValue = (e) => {\n    setUser(() => {\n      return { ...user, [e.target.name]: e.target.value };\n    });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"/users/add\",\n      data: user,\n    })\n      .then(response => {\n        console.log(message);\n        setMessage(response.data.register);\n        setIsRegistered(true);\n        console.log(response.data.register);\n       /* response.data.register === true ? <Success/> : <Failed/> */\n      })\n      .catch(error => {\n        setWarning(true)\n        console.log(error);\n      });\n  };\n\n  return (\n    <main>\n      {isRegistered ? <Success/> : \n      <div>\n        <h1>Register</h1>\n      <Form\n        onSubmit={(e) => {\n          submitHandler(e);\n        }}\n      >\n        <Form.Group>\n          <label htmlFor=\"registerEmail\">Email address</label>\n          <input\n            type=\"email\"\n            required\n            className=\"form-control\"\n            id=\"registerEmail\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <Form.Group>\n          <label htmlFor=\"registerPassword\">Password</label>\n          <input\n            type=\"password\"\n            required\n            className=\"form-control\"\n            id=\"registerPassword\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <Form.Group>\n          <label htmlFor=\"registerName\">Name</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            id=\"registerName\"\n            placeholder=\"Name\"\n            name=\"name\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <Form.Group>\n          <label htmlFor=\"registerSpiritAnimal\">Spirit Animal</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            id=\"registerSpiritAnimal\"\n            placeholder=\"Spirit Animal\"\n            name=\"spiritAnimal\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" />\n      </Form>\n      <p>\n        already registered? please <Link to=\"./login\">log in</Link>\n      </p> \n      </div>}\n      {message ? null : <Failed/>}\n      {warning ? <p>server is ooo</p> : null}\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}