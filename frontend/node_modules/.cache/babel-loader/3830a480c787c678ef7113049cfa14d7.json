{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dci/UIBasics/dbs/mongoose/frontend/src/components/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Success from \"./alerts/registerSuccess\";\nimport Failed from \"./alerts/registerFailed\";\nexport default function Register() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [message, setMessage] = useState(false);\n  const [warning, setWarning] = use;\n\n  const getValue = e => {\n    setUser(() => {\n      return { ...user,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"/users/add\",\n      data: user\n    }).then(response => {\n      console.log(message);\n      setMessage(response.data.register);\n      console.log(response.data.register);\n      /* response.data.register === true ? <Success/> : <Failed/> */\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        submitHandler(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerEmail\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          className: \"form-control\",\n          id: \"registerEmail\",\n          placeholder: \"Enter email\",\n          name: \"email\",\n          onChange: getValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerPassword\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          className: \"form-control\",\n          id: \"registerPassword\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: getValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerName\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          className: \"form-control\",\n          id: \"registerName\",\n          placeholder: \"Name\",\n          name: \"name\",\n          onChange: getValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerSpiritAnimal\",\n          children: \"Spirit Animal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          className: \"form-control\",\n          id: \"registerSpiritAnimal\",\n          placeholder: \"Spirit Animal\",\n          name: \"spiritAnimal\",\n          onChange: getValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"already registered? please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./login\",\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), message ? /*#__PURE__*/_jsxDEV(Success, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Failed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"3/5tSMOcnVasVYAItARacoKPF6g=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/dci/UIBasics/dbs/mongoose/frontend/src/components/register.js"],"names":["React","useState","axios","Form","BrowserRouter","Router","Switch","Route","Link","Success","Failed","Register","user","setUser","message","setMessage","warning","setWarning","use","getValue","e","target","name","value","submitHandler","preventDefault","method","url","data","then","response","console","log","register","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Success from \"./alerts/registerSuccess\";\nimport Failed from \"./alerts/registerFailed\";\n\nexport default function Register() {\n  const [user, setUser] = useState({});\n  const [message, setMessage] = useState(false);\n  const [warning, setWarning] = use\n\n  const getValue = (e) => {\n    setUser(() => {\n      return { ...user, [e.target.name]: e.target.value };\n    });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"/users/add\",\n      data: user,\n    })\n      .then(response => {\n        console.log(message);\n        setMessage(response.data.register);\n        console.log(response.data.register);\n       /* response.data.register === true ? <Success/> : <Failed/> */\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <main>\n      <h1>Register</h1>\n      <Form\n        onSubmit={(e) => {\n          submitHandler(e);\n        }}\n      >\n        <Form.Group>\n          <label htmlFor=\"registerEmail\">Email address</label>\n          <input\n            type=\"email\"\n            required\n            className=\"form-control\"\n            id=\"registerEmail\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <Form.Group>\n          <label htmlFor=\"registerPassword\">Password</label>\n          <input\n            type=\"password\"\n            required\n            className=\"form-control\"\n            id=\"registerPassword\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <Form.Group>\n          <label htmlFor=\"registerName\">Name</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            id=\"registerName\"\n            placeholder=\"Name\"\n            name=\"name\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <Form.Group>\n          <label htmlFor=\"registerSpiritAnimal\">Spirit Animal</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            id=\"registerSpiritAnimal\"\n            placeholder=\"Spirit Animal\"\n            name=\"spiritAnimal\"\n            onChange={getValue}\n          />\n        </Form.Group>\n        <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" />\n      </Form>\n      <p>\n        already registered? please <Link to=\"./login\">log in</Link>\n      </p>\n      {message ? <Success/> : <Failed/>}\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}